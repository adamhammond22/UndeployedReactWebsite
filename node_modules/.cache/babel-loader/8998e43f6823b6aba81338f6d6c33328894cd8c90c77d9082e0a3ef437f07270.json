{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adam\\\\Desktop\\\\Projects\\\\ReactWebsite\\\\src\\\\CustomDrawers.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\n// import Drawer from '@mui/material/Drawer';\nimport AppBar from '@mui/material/AppBar';\nimport { Typography } from '@mui/material';\nimport Box from '@mui/material/Box';\n// import List from '@mui/material/List';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n// import ListItem from '@mui/material/ListItem';\n// import CloseIcon from '@mui/icons-material/Close';\n// import Divider from '@mui/material/Divider';\nimport Toolbar from '@mui/material/Toolbar';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport { ThemeStateContext } from './Contexts';\n// const pages = ['Contact', 'Projects', 'Resume', 'Games'];\n/**\n * Navbar Drawer creator\n * @return {object} JSX\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomNavbar() {\n  _s();\n  /* State to track if collapsed navbar open */\n  // const [isOpen, changeIsOpen] = useState(false);\n  const changeThemeState = useContext(ThemeStateContext);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Consumer, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            sx: {\n              flexGrow: 1\n            },\n            children: \"News\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => changeThemeState('dark'),\n            children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n}\n_s(CustomNavbar, \"essXHFY22YRfmtVw/7DEHkO1c6Y=\");\n_c = CustomNavbar;\n;\nexport { CustomNavbar };\nvar _c;\n$RefreshReg$(_c, \"CustomNavbar\");","map":{"version":3,"names":["React","useContext","AppBar","Typography","Box","IconButton","MenuIcon","Toolbar","SettingsIcon","ThemeStateContext","CustomNavbar","changeThemeState","flexGrow"],"sources":["C:/Users/Adam/Desktop/Projects/ReactWebsite/src/CustomDrawers.jsx"],"sourcesContent":["import React, {useContext} from 'react';\n// import Drawer from '@mui/material/Drawer';\nimport AppBar from '@mui/material/AppBar';\nimport {Typography} from '@mui/material';\nimport Box from '@mui/material/Box';\n// import List from '@mui/material/List';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n// import ListItem from '@mui/material/ListItem';\n// import CloseIcon from '@mui/icons-material/Close';\n// import Divider from '@mui/material/Divider';\nimport Toolbar from '@mui/material/Toolbar';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport {ThemeStateContext} from './Contexts';\n// const pages = ['Contact', 'Projects', 'Resume', 'Games'];\n/**\n * Navbar Drawer creator\n * @return {object} JSX\n */\nfunction CustomNavbar() {\n  /* State to track if collapsed navbar open */\n  // const [isOpen, changeIsOpen] = useState(false);\n  const changeThemeState = useContext(ThemeStateContext);\n  return (\n  <ThemeContext.Consumer>\n    <Box sx={{flexGrow: 1}}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{flexGrow: 1}}>\n            News\n          </Typography>\n          <IconButton onClick = {() => changeThemeState('dark')}>\n            <SettingsIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  </ThemeContext.Consumer>\n  );\n};\nexport {CustomNavbar};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,QAAO,OAAO;AACvC;AACA,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAAQC,UAAU,QAAO,eAAe;AACxC,OAAOC,GAAG,MAAM,mBAAmB;AACnC;AACA,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C;AACA;AACA;AACA,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAAQC,iBAAiB,QAAO,YAAY;AAC5C;AACA;AACA;AACA;AACA;AAHA;AAIA,SAASC,YAAY,GAAG;EAAA;EACtB;EACA;EACA,MAAMC,gBAAgB,GAAGV,UAAU,CAACQ,iBAAiB,CAAC;EACtD,oBACA,QAAC,YAAY,CAAC,QAAQ;IAAA,uBACpB,QAAC,GAAG;MAAC,EAAE,EAAE;QAACG,QAAQ,EAAE;MAAC,CAAE;MAAA,uBACrB,QAAC,MAAM;QAAC,QAAQ,EAAC,QAAQ;QAAA,uBACvB,QAAC,OAAO;UAAA,wBACN,QAAC,UAAU;YAAA,uBACT,QAAC,QAAQ;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QACD,eACb,QAAC,UAAU;YAAC,OAAO,EAAC,IAAI;YAAC,SAAS,EAAC,KAAK;YAAC,EAAE,EAAE;cAACA,QAAQ,EAAE;YAAC,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAE9C,eACb,QAAC,UAAU;YAAC,OAAO,EAAI,MAAMD,gBAAgB,CAAC,MAAM,CAAE;YAAA,uBACpD,QAAC,YAAY;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QACL;QAAA;UAAA;UAAA;UAAA;QAAA;MACL;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA;EACL;IAAA;IAAA;IAAA;EAAA,QACgB;AAE1B;AAAC,GAvBQD,YAAY;AAAA,KAAZA,YAAY;AAuBpB;AACD,SAAQA,YAAY;AAAE;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}