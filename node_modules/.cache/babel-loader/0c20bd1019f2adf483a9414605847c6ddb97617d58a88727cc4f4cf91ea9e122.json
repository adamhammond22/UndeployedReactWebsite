{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adam\\\\Desktop\\\\Projects\\\\ReactWebsite\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\n// import {darkTheme, lightTheme} from './Themes';\nimport { ThemeStateContext } from './Contexts';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Home from './Home';\n/**\n * App Component, routes all other components.\n * @return {object} JSX\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /* Dark Mode State */\n  const [themeState, setThemeState] = React.useState('light');\n  const changeThemeState = newState => {\n    if (themeState !== newState) {\n      setThemeState(newState);\n    }\n  };\n  /* Set current theme according to theme state */\n  // const currentTheme = themeState === 'dark'? createTheme({darkTheme}) :\n  //   createTheme({lightTheme});\n  const currentTheme = createTheme({\n    palette: {\n      primary: {\n        main: '#34eb46'\n      }\n    }\n  });\n  useEffect(() => {\n    console.log('state:' + themeState);\n  });\n  /* Context to pass setThemeState to children */\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: currentTheme,\n    children: /*#__PURE__*/_jsxDEV(ThemeStateContext.Provider, {\n      value: changeThemeState,\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"lyOIAuWx3kqj2vVQ0nUBKOp5rp8=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","BrowserRouter","Route","Routes","ThemeStateContext","createTheme","ThemeProvider","Home","App","themeState","setThemeState","useState","changeThemeState","newState","currentTheme","palette","primary","main","console","log"],"sources":["C:/Users/Adam/Desktop/Projects/ReactWebsite/src/App.jsx"],"sourcesContent":["import React, {useEffect} from 'react';\nimport {BrowserRouter, Route, Routes} from 'react-router-dom';\n// import {darkTheme, lightTheme} from './Themes';\nimport {ThemeStateContext} from './Contexts';\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\nimport Home from './Home';\n/**\n * App Component, routes all other components.\n * @return {object} JSX\n */\nfunction App() {\n  /* Dark Mode State */\n  const [themeState, setThemeState] = React.useState('light');\n  const changeThemeState = (newState) => {\n    if (themeState !== newState) {\n      setThemeState(newState);\n    }\n  };\n  /* Set current theme according to theme state */\n  // const currentTheme = themeState === 'dark'? createTheme({darkTheme}) :\n  //   createTheme({lightTheme});\n  const currentTheme = createTheme({\n    palette: {\n      primary: {\n        main: '#34eb46',\n      },\n    },\n  });\n  useEffect(() => {\n    console.log('state:' + themeState);\n  });\n  /* Context to pass setThemeState to children */\n  return (\n      <ThemeProvider theme = {currentTheme}>\n        <ThemeStateContext.Provider value = {changeThemeState}>\n            <BrowserRouter>\n              <Routes>\n                <Route path=\"/\" exact element={<Home />} />\n              </Routes>\n            </BrowserRouter>\n        </ThemeStateContext.Provider>\n      </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAAQC,aAAa,EAAEC,KAAK,EAAEC,MAAM,QAAO,kBAAkB;AAC7D;AACA,SAAQC,iBAAiB,QAAO,YAAY;AAC5C,SAAQC,WAAW,EAAEC,aAAa,QAAO,sBAAsB;AAC/D,OAAOC,IAAI,MAAM,QAAQ;AACzB;AACA;AACA;AACA;AAHA;AAIA,SAASC,GAAG,GAAG;EAAA;EACb;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,OAAO,CAAC;EAC3D,MAAMC,gBAAgB,GAAIC,QAAQ,IAAK;IACrC,IAAIJ,UAAU,KAAKI,QAAQ,EAAE;MAC3BH,aAAa,CAACG,QAAQ,CAAC;IACzB;EACF,CAAC;EACD;EACA;EACA;EACA,MAAMC,YAAY,GAAGT,WAAW,CAAC;IAC/BU,OAAO,EAAE;MACPC,OAAO,EAAE;QACPC,IAAI,EAAE;MACR;IACF;EACF,CAAC,CAAC;EACFjB,SAAS,CAAC,MAAM;IACdkB,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGV,UAAU,CAAC;EACpC,CAAC,CAAC;EACF;EACA,oBACI,QAAC,aAAa;IAAC,KAAK,EAAIK,YAAa;IAAA,uBACnC,QAAC,iBAAiB,CAAC,QAAQ;MAAC,KAAK,EAAIF,gBAAiB;MAAA,uBAClD,QAAC,aAAa;QAAA,uBACZ,QAAC,MAAM;UAAA,uBACL,QAAC,KAAK;YAAC,IAAI,EAAC,GAAG;YAAC,KAAK;YAAC,OAAO,eAAE,QAAC,IAAI;cAAA;cAAA;cAAA;YAAA;UAAI;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA;MACpC;QAAA;QAAA;QAAA;MAAA;IACK;MAAA;MAAA;MAAA;IAAA;EACS;IAAA;IAAA;IAAA;EAAA,QACf;AAEtB;AAAC,GAjCQJ,GAAG;AAAA,KAAHA,GAAG;AAiCX;AAED,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}